"""
Django settings for pythonDjango project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.168.0.106']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'app',
    'wx',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pythonDjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pythonDjango.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config('DB_NAME'),  # 数据库名
        'USER': config('DB_USER'),  # 数据库用户名
        'PASSWORD': config('DB_PASSWORD'),  # 数据库密码
        'HOST': config('DB_HOST'),  # 数据库主机地址
        'PORT': config('DB_PORT'),  # 数据库端口（MySQL默认是3306）
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = [
    'pythonDjango.backends.UserBackend',
    'django.contrib.auth.backends.ModelBackend'
]
AUTH_USER_MODEL = 'app.User'

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # 访问令牌的有效期，默认为5分钟
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),  # 刷新令牌的有效期，默认为1天
    'ROTATE_REFRESH_TOKENS': False,  # 当使用刷新令牌时是否创建新的刷新令牌，默认是False
    'BLACKLIST_AFTER_ROTATION': True,  # 在旋转刷新令牌后是否将旧的刷新令牌加入黑名单，默认是True
    'UPDATE_LAST_LOGIN': False,  # 是否更新用户的最后登录时间，默认是False

    'ALGORITHM': 'HS256',  # 签名算法，默认是HMAC SHA 256
    'SIGNING_KEY': SECRET_KEY,  # 签名密钥，默认是Django的SECRET_KEY
    'VERIFYING_KEY': None,  # 验证密钥，默认是None（使用签名密钥）
    'AUDIENCE': None,  # 受众，默认是None
    'ISSUER': None,  # 发行者，默认是None

    'AUTH_HEADER_TYPES': ('Bearer',),  # 可以是 ('Bearer',)，或者你也可以自定义如 ('JWT',)
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',  # HTTP头名称，默认是'HTTP_AUTHORIZATION'
    'USER_ID_FIELD': 'userid',  # 用户模型中用作唯一标识符的字段，默认是'id'
    'USER_ID_CLAIM': 'user_id',  # JWT中用户ID对应的声明，默认是'user_id'

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),  # 授权令牌类，默认是AccessToken
    'TOKEN_TYPE_CLAIM': 'token_type',  # JWT中存储令牌类型的声明，默认是'token_type'

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=60),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'pythonDjango.authentication.CustomJWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}
